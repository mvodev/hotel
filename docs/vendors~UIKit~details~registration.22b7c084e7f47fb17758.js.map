{"version":3,"sources":["webpack:///../node_modules/webpack/buildin/global.js","webpack:///../node_modules/cleave.js/dist/cleave-esm.js"],"names":["g","this","Function","e","window","module","exports","NumeralFormatter","numeralDecimalMark","numeralIntegerScale","numeralDecimalScale","numeralThousandsGroupStyle","numeralPositiveOnly","stripLeadingZeroes","prefix","signBeforePrefix","tailPrefix","delimiter","groupStyle","thousand","delimiterRE","RegExp","lakh","wan","none","prototype","getRawValue","value","replace","format","parts","partSign","partSignAndPrefix","partInteger","partDecimal","slice","indexOf","split","toString","NumeralFormatter_1","DateFormatter","datePattern","dateMin","dateMax","date","blocks","reverse","map","x","parseInt","length","unshift","initBlocks","owner","forEach","push","getISOFormatDate","addLeadingZero","getBlocks","getValidatedDate","result","index","sub","sub0","rest","getFixedDateString","day","month","year","dayIndex","monthIndex","yearIndex","dayStartIndex","monthStartIndex","yearStartIndex","fullYearDone","toLowerCase","getFixedDate","type","getRangeFixedDate","reduce","previous","current","addLeadingZeroForYear","find","Math","min","isLeapYear","number","fullYearMode","DateFormatter_1","TimeFormatter","timePattern","timeFormat","time","getISOFormatTime","getTimeFormatOptions","String","maxHourFirstDigit","maxHours","maxMinutesFirstDigit","maxMinutes","getValidatedTime","timeFormatOptions","getFixedTimeString","second","minute","hour","secondIndex","minuteIndex","hourIndex","secondStartIndex","minuteStartIndex","hourStartIndex","getFixedTime","TimeFormatter_1","PhoneFormatter","formatter","setFormatter","phoneNumber","clear","validated","i","iMax","inputDigit","charAt","test","PhoneFormatter_1","CreditCardDetector","uatp","amex","diners","discover","mastercard","dankort","instapayment","jcb15","jcb","maestro","visa","mir","unionPay","general","re","getStrictBlocks","block","total","prev","concat","getInfo","strictMode","key","matchedBlocks","CreditCardDetector_1","Util_1","noop","strip","getPostDelimiter","delimiters","matchedDelimiter","getDelimiterREByDelimiter","getNextCursorPosition","prevPos","oldValue","newValue","getPositionOffset","oldRawValue","newRawValue","lengthOffset","stripDelimiters","abs","letter","headStr","str","getMaxLength","getPrefixStrippedValue","prefixLength","prevResult","noImmediatePrefix","prevValue","getFirstDiffIndex","getFormattedValue","blocksLength","delimiterLazyShow","multipleDelimiters","currentDelimiter","fixPrefixCursor","el","val","appendix","setSelectionRange","len","setTimeout","checkFullSelection","getSelection","document","ex","setSelection","element","position","doc","getActiveElement","createTextRange","range","move","select","console","warn","parent","activeElement","shadowRoot","isAndroid","navigator","userAgent","isAndroidBackspaceKeydown","lastInputValue","currentInputValue","DefaultProperties_1","assign","target","opts","creditCard","creditCardStrictMode","creditCardType","onCreditCardTypeChanged","phone","phoneRegionCode","phoneFormatter","timeFormatter","dateFormatter","numeral","swapHiddenInput","numericOnly","uppercase","lowercase","rawValueTrimPrefix","copyDelimiter","initValue","undefined","delimiterLength","root","commonjsGlobal","maxLength","backspace","onValueChanged","Cleave","hasMultipleElements","querySelector","querySelectorAll","Error","properties","DefaultProperties","init","pps","Util","isBackward","onChangeListener","onChange","bind","onKeyDownListener","onKeyDown","onFocusListener","onFocus","onCutListener","onCut","onCopyListener","onCopy","initSwapHiddenInput","addEventListener","initPhoneFormatter","initDateFormatter","initTimeFormatter","initNumeralFormatter","onInput","inputFormatter","cloneNode","parentNode","insertBefore","elementSwapHidden","id","numeralFormatter","AsYouTypeFormatter","event","charCode","which","keyCode","inputType","postDelimiter","postDelimiterBackspace","copyClipboardData","inputValue","textToCopy","clipboardData","setData","preventDefault","postDelimiterAfter","updateValueState","toUpperCase","updateCreditCardPropsByValue","creditCardInfo","call","endPos","selectionEnd","callOnValueChanged","name","rawValue","setPhoneRegionCode","setRawValue","destroy","removeEventListener"],"mappings":"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","file":"vendors~UIKit~details~registration.22b7c084e7f47fb17758.js","sourcesContent":["var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","var commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nvar NumeralFormatter = function (numeralDecimalMark,\n                                 numeralIntegerScale,\n                                 numeralDecimalScale,\n                                 numeralThousandsGroupStyle,\n                                 numeralPositiveOnly,\n                                 stripLeadingZeroes,\n                                 prefix,\n                                 signBeforePrefix,\n                                 tailPrefix,\n                                 delimiter) {\n    var owner = this;\n\n    owner.numeralDecimalMark = numeralDecimalMark || '.';\n    owner.numeralIntegerScale = numeralIntegerScale > 0 ? numeralIntegerScale : 0;\n    owner.numeralDecimalScale = numeralDecimalScale >= 0 ? numeralDecimalScale : 2;\n    owner.numeralThousandsGroupStyle = numeralThousandsGroupStyle || NumeralFormatter.groupStyle.thousand;\n    owner.numeralPositiveOnly = !!numeralPositiveOnly;\n    owner.stripLeadingZeroes = stripLeadingZeroes !== false;\n    owner.prefix = (prefix || prefix === '') ? prefix : '';\n    owner.signBeforePrefix = !!signBeforePrefix;\n    owner.tailPrefix = !!tailPrefix;\n    owner.delimiter = (delimiter || delimiter === '') ? delimiter : ',';\n    owner.delimiterRE = delimiter ? new RegExp('\\\\' + delimiter, 'g') : '';\n};\n\nNumeralFormatter.groupStyle = {\n    thousand: 'thousand',\n    lakh:     'lakh',\n    wan:      'wan',\n    none:     'none'    \n};\n\nNumeralFormatter.prototype = {\n    getRawValue: function (value) {\n        return value.replace(this.delimiterRE, '').replace(this.numeralDecimalMark, '.');\n    },\n\n    format: function (value) {\n        var owner = this, parts, partSign, partSignAndPrefix, partInteger, partDecimal = '';\n\n        // strip alphabet letters\n        value = value.replace(/[A-Za-z]/g, '')\n            // replace the first decimal mark with reserved placeholder\n            .replace(owner.numeralDecimalMark, 'M')\n\n            // strip non numeric letters except minus and \"M\"\n            // this is to ensure prefix has been stripped\n            .replace(/[^\\dM-]/g, '')\n\n            // replace the leading minus with reserved placeholder\n            .replace(/^\\-/, 'N')\n\n            // strip the other minus sign (if present)\n            .replace(/\\-/g, '')\n\n            // replace the minus sign (if present)\n            .replace('N', owner.numeralPositiveOnly ? '' : '-')\n\n            // replace decimal mark\n            .replace('M', owner.numeralDecimalMark);\n\n        // strip any leading zeros\n        if (owner.stripLeadingZeroes) {\n            value = value.replace(/^(-)?0+(?=\\d)/, '$1');\n        }\n\n        partSign = value.slice(0, 1) === '-' ? '-' : '';\n        if (typeof owner.prefix != 'undefined') {\n            if (owner.signBeforePrefix) {\n                partSignAndPrefix = partSign + owner.prefix;\n            } else {\n                partSignAndPrefix = owner.prefix + partSign;\n            }\n        } else {\n            partSignAndPrefix = partSign;\n        }\n        \n        partInteger = value;\n\n        if (value.indexOf(owner.numeralDecimalMark) >= 0) {\n            parts = value.split(owner.numeralDecimalMark);\n            partInteger = parts[0];\n            partDecimal = owner.numeralDecimalMark + parts[1].slice(0, owner.numeralDecimalScale);\n        }\n\n        if(partSign === '-') {\n            partInteger = partInteger.slice(1);\n        }\n\n        if (owner.numeralIntegerScale > 0) {\n          partInteger = partInteger.slice(0, owner.numeralIntegerScale);\n        }\n\n        switch (owner.numeralThousandsGroupStyle) {\n        case NumeralFormatter.groupStyle.lakh:\n            partInteger = partInteger.replace(/(\\d)(?=(\\d\\d)+\\d$)/g, '$1' + owner.delimiter);\n\n            break;\n\n        case NumeralFormatter.groupStyle.wan:\n            partInteger = partInteger.replace(/(\\d)(?=(\\d{4})+$)/g, '$1' + owner.delimiter);\n\n            break;\n\n        case NumeralFormatter.groupStyle.thousand:\n            partInteger = partInteger.replace(/(\\d)(?=(\\d{3})+$)/g, '$1' + owner.delimiter);\n\n            break;\n        }\n\n        if (owner.tailPrefix) {\n            return partSign + partInteger.toString() + (owner.numeralDecimalScale > 0 ? partDecimal.toString() : '') + owner.prefix;\n        }\n\n        return partSignAndPrefix + partInteger.toString() + (owner.numeralDecimalScale > 0 ? partDecimal.toString() : '');\n    }\n};\n\nvar NumeralFormatter_1 = NumeralFormatter;\n\nvar DateFormatter = function (datePattern, dateMin, dateMax) {\n    var owner = this;\n\n    owner.date = [];\n    owner.blocks = [];\n    owner.datePattern = datePattern;\n    owner.dateMin = dateMin\n      .split('-')\n      .reverse()\n      .map(function(x) {\n        return parseInt(x, 10);\n      });\n    if (owner.dateMin.length === 2) owner.dateMin.unshift(0);\n\n    owner.dateMax = dateMax\n      .split('-')\n      .reverse()\n      .map(function(x) {\n        return parseInt(x, 10);\n      });\n    if (owner.dateMax.length === 2) owner.dateMax.unshift(0);\n    \n    owner.initBlocks();\n};\n\nDateFormatter.prototype = {\n    initBlocks: function () {\n        var owner = this;\n        owner.datePattern.forEach(function (value) {\n            if (value === 'Y') {\n                owner.blocks.push(4);\n            } else {\n                owner.blocks.push(2);\n            }\n        });\n    },\n\n    getISOFormatDate: function () {\n        var owner = this,\n            date = owner.date;\n\n        return date[2] ? (\n            date[2] + '-' + owner.addLeadingZero(date[1]) + '-' + owner.addLeadingZero(date[0])\n        ) : '';\n    },\n\n    getBlocks: function () {\n        return this.blocks;\n    },\n\n    getValidatedDate: function (value) {\n        var owner = this, result = '';\n\n        value = value.replace(/[^\\d]/g, '');\n\n        owner.blocks.forEach(function (length, index) {\n            if (value.length > 0) {\n                var sub = value.slice(0, length),\n                    sub0 = sub.slice(0, 1),\n                    rest = value.slice(length);\n\n                switch (owner.datePattern[index]) {\n                case 'd':\n                    if (sub === '00') {\n                        sub = '01';\n                    } else if (parseInt(sub0, 10) > 3) {\n                        sub = '0' + sub0;\n                    } else if (parseInt(sub, 10) > 31) {\n                        sub = '31';\n                    }\n\n                    break;\n\n                case 'm':\n                    if (sub === '00') {\n                        sub = '01';\n                    } else if (parseInt(sub0, 10) > 1) {\n                        sub = '0' + sub0;\n                    } else if (parseInt(sub, 10) > 12) {\n                        sub = '12';\n                    }\n\n                    break;\n                }\n\n                result += sub;\n\n                // update remaining string\n                value = rest;\n            }\n        });\n\n        return this.getFixedDateString(result);\n    },\n\n    getFixedDateString: function (value) {\n        var owner = this, datePattern = owner.datePattern, date = [],\n            dayIndex = 0, monthIndex = 0, yearIndex = 0,\n            dayStartIndex = 0, monthStartIndex = 0, yearStartIndex = 0,\n            day, month, year, fullYearDone = false;\n\n        // mm-dd || dd-mm\n        if (value.length === 4 && datePattern[0].toLowerCase() !== 'y' && datePattern[1].toLowerCase() !== 'y') {\n            dayStartIndex = datePattern[0] === 'd' ? 0 : 2;\n            monthStartIndex = 2 - dayStartIndex;\n            day = parseInt(value.slice(dayStartIndex, dayStartIndex + 2), 10);\n            month = parseInt(value.slice(monthStartIndex, monthStartIndex + 2), 10);\n\n            date = this.getFixedDate(day, month, 0);\n        }\n\n        // yyyy-mm-dd || yyyy-dd-mm || mm-dd-yyyy || dd-mm-yyyy || dd-yyyy-mm || mm-yyyy-dd\n        if (value.length === 8) {\n            datePattern.forEach(function (type, index) {\n                switch (type) {\n                case 'd':\n                    dayIndex = index;\n                    break;\n                case 'm':\n                    monthIndex = index;\n                    break;\n                default:\n                    yearIndex = index;\n                    break;\n                }\n            });\n\n            yearStartIndex = yearIndex * 2;\n            dayStartIndex = (dayIndex <= yearIndex) ? dayIndex * 2 : (dayIndex * 2 + 2);\n            monthStartIndex = (monthIndex <= yearIndex) ? monthIndex * 2 : (monthIndex * 2 + 2);\n\n            day = parseInt(value.slice(dayStartIndex, dayStartIndex + 2), 10);\n            month = parseInt(value.slice(monthStartIndex, monthStartIndex + 2), 10);\n            year = parseInt(value.slice(yearStartIndex, yearStartIndex + 4), 10);\n\n            fullYearDone = value.slice(yearStartIndex, yearStartIndex + 4).length === 4;\n\n            date = this.getFixedDate(day, month, year);\n        }\n\n        // mm-yy || yy-mm\n        if (value.length === 4 && (datePattern[0] === 'y' || datePattern[1] === 'y')) {\n            monthStartIndex = datePattern[0] === 'm' ? 0 : 2;\n            yearStartIndex = 2 - monthStartIndex;\n            month = parseInt(value.slice(monthStartIndex, monthStartIndex + 2), 10);\n            year = parseInt(value.slice(yearStartIndex, yearStartIndex + 2), 10);\n\n            fullYearDone = value.slice(yearStartIndex, yearStartIndex + 2).length === 2;\n\n            date = [0, month, year];\n        }\n\n        // mm-yyyy || yyyy-mm\n        if (value.length === 6 && (datePattern[0] === 'Y' || datePattern[1] === 'Y')) {\n            monthStartIndex = datePattern[0] === 'm' ? 0 : 4;\n            yearStartIndex = 2 - 0.5 * monthStartIndex;\n            month = parseInt(value.slice(monthStartIndex, monthStartIndex + 2), 10);\n            year = parseInt(value.slice(yearStartIndex, yearStartIndex + 4), 10);\n\n            fullYearDone = value.slice(yearStartIndex, yearStartIndex + 4).length === 4;\n\n            date = [0, month, year];\n        }\n\n        date = owner.getRangeFixedDate(date);\n        owner.date = date;\n\n        var result = date.length === 0 ? value : datePattern.reduce(function (previous, current) {\n            switch (current) {\n            case 'd':\n                return previous + (date[0] === 0 ? '' : owner.addLeadingZero(date[0]));\n            case 'm':\n                return previous + (date[1] === 0 ? '' : owner.addLeadingZero(date[1]));\n            case 'y':\n                return previous + (fullYearDone ? owner.addLeadingZeroForYear(date[2], false) : '');\n            case 'Y':\n                return previous + (fullYearDone ? owner.addLeadingZeroForYear(date[2], true) : '');\n            }\n        }, '');\n\n        return result;\n    },\n\n    getRangeFixedDate: function (date) {\n        var owner = this,\n            datePattern = owner.datePattern,\n            dateMin = owner.dateMin || [],\n            dateMax = owner.dateMax || [];\n\n        if (!date.length || (dateMin.length < 3 && dateMax.length < 3)) return date;\n\n        if (\n          datePattern.find(function(x) {\n            return x.toLowerCase() === 'y';\n          }) &&\n          date[2] === 0\n        ) return date;\n\n        if (dateMax.length && (dateMax[2] < date[2] || (\n          dateMax[2] === date[2] && (dateMax[1] < date[1] || (\n            dateMax[1] === date[1] && dateMax[0] < date[0]\n          ))\n        ))) return dateMax;\n\n        if (dateMin.length && (dateMin[2] > date[2] || (\n          dateMin[2] === date[2] && (dateMin[1] > date[1] || (\n            dateMin[1] === date[1] && dateMin[0] > date[0]\n          ))\n        ))) return dateMin;\n\n        return date;\n    },\n\n    getFixedDate: function (day, month, year) {\n        day = Math.min(day, 31);\n        month = Math.min(month, 12);\n        year = parseInt((year || 0), 10);\n\n        if ((month < 7 && month % 2 === 0) || (month > 8 && month % 2 === 1)) {\n            day = Math.min(day, month === 2 ? (this.isLeapYear(year) ? 29 : 28) : 30);\n        }\n\n        return [day, month, year];\n    },\n\n    isLeapYear: function (year) {\n        return ((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0);\n    },\n\n    addLeadingZero: function (number) {\n        return (number < 10 ? '0' : '') + number;\n    },\n\n    addLeadingZeroForYear: function (number, fullYearMode) {\n        if (fullYearMode) {\n            return (number < 10 ? '000' : (number < 100 ? '00' : (number < 1000 ? '0' : ''))) + number;\n        }\n\n        return (number < 10 ? '0' : '') + number;\n    }\n};\n\nvar DateFormatter_1 = DateFormatter;\n\nvar TimeFormatter = function (timePattern, timeFormat) {\n    var owner = this;\n\n    owner.time = [];\n    owner.blocks = [];\n    owner.timePattern = timePattern;\n    owner.timeFormat = timeFormat;\n    owner.initBlocks();\n};\n\nTimeFormatter.prototype = {\n    initBlocks: function () {\n        var owner = this;\n        owner.timePattern.forEach(function () {\n            owner.blocks.push(2);\n        });\n    },\n\n    getISOFormatTime: function () {\n        var owner = this,\n            time = owner.time;\n\n        return time[2] ? (\n            owner.addLeadingZero(time[0]) + ':' + owner.addLeadingZero(time[1]) + ':' + owner.addLeadingZero(time[2])\n        ) : '';\n    },\n\n    getBlocks: function () {\n        return this.blocks;\n    },\n\n    getTimeFormatOptions: function () {\n        var owner = this;\n        if (String(owner.timeFormat) === '12') {\n            return {\n                maxHourFirstDigit: 1,\n                maxHours: 12,\n                maxMinutesFirstDigit: 5,\n                maxMinutes: 60\n            };\n        }\n\n        return {\n            maxHourFirstDigit: 2,\n            maxHours: 23,\n            maxMinutesFirstDigit: 5,\n            maxMinutes: 60\n        };\n    },\n\n    getValidatedTime: function (value) {\n        var owner = this, result = '';\n\n        value = value.replace(/[^\\d]/g, '');\n\n        var timeFormatOptions = owner.getTimeFormatOptions();\n\n        owner.blocks.forEach(function (length, index) {\n            if (value.length > 0) {\n                var sub = value.slice(0, length),\n                    sub0 = sub.slice(0, 1),\n                    rest = value.slice(length);\n\n                switch (owner.timePattern[index]) {\n\n                case 'h':\n                    if (parseInt(sub0, 10) > timeFormatOptions.maxHourFirstDigit) {\n                        sub = '0' + sub0;\n                    } else if (parseInt(sub, 10) > timeFormatOptions.maxHours) {\n                        sub = timeFormatOptions.maxHours + '';\n                    }\n\n                    break;\n\n                case 'm':\n                case 's':\n                    if (parseInt(sub0, 10) > timeFormatOptions.maxMinutesFirstDigit) {\n                        sub = '0' + sub0;\n                    } else if (parseInt(sub, 10) > timeFormatOptions.maxMinutes) {\n                        sub = timeFormatOptions.maxMinutes + '';\n                    }\n                    break;\n                }\n\n                result += sub;\n\n                // update remaining string\n                value = rest;\n            }\n        });\n\n        return this.getFixedTimeString(result);\n    },\n\n    getFixedTimeString: function (value) {\n        var owner = this, timePattern = owner.timePattern, time = [],\n            secondIndex = 0, minuteIndex = 0, hourIndex = 0,\n            secondStartIndex = 0, minuteStartIndex = 0, hourStartIndex = 0,\n            second, minute, hour;\n\n        if (value.length === 6) {\n            timePattern.forEach(function (type, index) {\n                switch (type) {\n                case 's':\n                    secondIndex = index * 2;\n                    break;\n                case 'm':\n                    minuteIndex = index * 2;\n                    break;\n                case 'h':\n                    hourIndex = index * 2;\n                    break;\n                }\n            });\n\n            hourStartIndex = hourIndex;\n            minuteStartIndex = minuteIndex;\n            secondStartIndex = secondIndex;\n\n            second = parseInt(value.slice(secondStartIndex, secondStartIndex + 2), 10);\n            minute = parseInt(value.slice(minuteStartIndex, minuteStartIndex + 2), 10);\n            hour = parseInt(value.slice(hourStartIndex, hourStartIndex + 2), 10);\n\n            time = this.getFixedTime(hour, minute, second);\n        }\n\n        if (value.length === 4 && owner.timePattern.indexOf('s') < 0) {\n            timePattern.forEach(function (type, index) {\n                switch (type) {\n                case 'm':\n                    minuteIndex = index * 2;\n                    break;\n                case 'h':\n                    hourIndex = index * 2;\n                    break;\n                }\n            });\n\n            hourStartIndex = hourIndex;\n            minuteStartIndex = minuteIndex;\n\n            second = 0;\n            minute = parseInt(value.slice(minuteStartIndex, minuteStartIndex + 2), 10);\n            hour = parseInt(value.slice(hourStartIndex, hourStartIndex + 2), 10);\n\n            time = this.getFixedTime(hour, minute, second);\n        }\n\n        owner.time = time;\n\n        return time.length === 0 ? value : timePattern.reduce(function (previous, current) {\n            switch (current) {\n            case 's':\n                return previous + owner.addLeadingZero(time[2]);\n            case 'm':\n                return previous + owner.addLeadingZero(time[1]);\n            case 'h':\n                return previous + owner.addLeadingZero(time[0]);\n            }\n        }, '');\n    },\n\n    getFixedTime: function (hour, minute, second) {\n        second = Math.min(parseInt(second || 0, 10), 60);\n        minute = Math.min(minute, 60);\n        hour = Math.min(hour, 60);\n\n        return [hour, minute, second];\n    },\n\n    addLeadingZero: function (number) {\n        return (number < 10 ? '0' : '') + number;\n    }\n};\n\nvar TimeFormatter_1 = TimeFormatter;\n\nvar PhoneFormatter = function (formatter, delimiter) {\n    var owner = this;\n\n    owner.delimiter = (delimiter || delimiter === '') ? delimiter : ' ';\n    owner.delimiterRE = delimiter ? new RegExp('\\\\' + delimiter, 'g') : '';\n\n    owner.formatter = formatter;\n};\n\nPhoneFormatter.prototype = {\n    setFormatter: function (formatter) {\n        this.formatter = formatter;\n    },\n\n    format: function (phoneNumber) {\n        var owner = this;\n\n        owner.formatter.clear();\n\n        // only keep number and +\n        phoneNumber = phoneNumber.replace(/[^\\d+]/g, '');\n\n        // strip non-leading +\n        phoneNumber = phoneNumber.replace(/^\\+/, 'B').replace(/\\+/g, '').replace('B', '+');\n\n        // strip delimiter\n        phoneNumber = phoneNumber.replace(owner.delimiterRE, '');\n\n        var result = '', current, validated = false;\n\n        for (var i = 0, iMax = phoneNumber.length; i < iMax; i++) {\n            current = owner.formatter.inputDigit(phoneNumber.charAt(i));\n\n            // has ()- or space inside\n            if (/[\\s()-]/g.test(current)) {\n                result = current;\n\n                validated = true;\n            } else {\n                if (!validated) {\n                    result = current;\n                }\n                // else: over length input\n                // it turns to invalid number again\n            }\n        }\n\n        // strip ()\n        // e.g. US: 7161234567 returns (716) 123-4567\n        result = result.replace(/[()]/g, '');\n        // replace library delimiter with user customized delimiter\n        result = result.replace(/[\\s-]/g, owner.delimiter);\n\n        return result;\n    }\n};\n\nvar PhoneFormatter_1 = PhoneFormatter;\n\nvar CreditCardDetector = {\n    blocks: {\n        uatp:          [4, 5, 6],\n        amex:          [4, 6, 5],\n        diners:        [4, 6, 4],\n        discover:      [4, 4, 4, 4],\n        mastercard:    [4, 4, 4, 4],\n        dankort:       [4, 4, 4, 4],\n        instapayment:  [4, 4, 4, 4],\n        jcb15:         [4, 6, 5],\n        jcb:           [4, 4, 4, 4],\n        maestro:       [4, 4, 4, 4],\n        visa:          [4, 4, 4, 4],\n        mir:           [4, 4, 4, 4],\n        unionPay:      [4, 4, 4, 4],\n        general:       [4, 4, 4, 4]\n    },\n\n    re: {\n        // starts with 1; 15 digits, not starts with 1800 (jcb card)\n        uatp: /^(?!1800)1\\d{0,14}/,\n\n        // starts with 34/37; 15 digits\n        amex: /^3[47]\\d{0,13}/,\n\n        // starts with 6011/65/644-649; 16 digits\n        discover: /^(?:6011|65\\d{0,2}|64[4-9]\\d?)\\d{0,12}/,\n\n        // starts with 300-305/309 or 36/38/39; 14 digits\n        diners: /^3(?:0([0-5]|9)|[689]\\d?)\\d{0,11}/,\n\n        // starts with 51-55/2221–2720; 16 digits\n        mastercard: /^(5[1-5]\\d{0,2}|22[2-9]\\d{0,1}|2[3-7]\\d{0,2})\\d{0,12}/,\n\n        // starts with 5019/4175/4571; 16 digits\n        dankort: /^(5019|4175|4571)\\d{0,12}/,\n\n        // starts with 637-639; 16 digits\n        instapayment: /^63[7-9]\\d{0,13}/,\n\n        // starts with 2131/1800; 15 digits\n        jcb15: /^(?:2131|1800)\\d{0,11}/,\n\n        // starts with 2131/1800/35; 16 digits\n        jcb: /^(?:35\\d{0,2})\\d{0,12}/,\n\n        // starts with 50/56-58/6304/67; 16 digits\n        maestro: /^(?:5[0678]\\d{0,2}|6304|67\\d{0,2})\\d{0,12}/,\n\n        // starts with 22; 16 digits\n        mir: /^220[0-4]\\d{0,12}/,\n\n        // starts with 4; 16 digits\n        visa: /^4\\d{0,15}/,\n\n        // starts with 62/81; 16 digits\n        unionPay: /^(62|81)\\d{0,14}/\n    },\n\n    getStrictBlocks: function (block) {\n      var total = block.reduce(function (prev, current) {\n        return prev + current;\n      }, 0);\n\n      return block.concat(19 - total);\n    },\n\n    getInfo: function (value, strictMode) {\n        var blocks = CreditCardDetector.blocks,\n            re = CreditCardDetector.re;\n\n        // Some credit card can have up to 19 digits number.\n        // Set strictMode to true will remove the 16 max-length restrain,\n        // however, I never found any website validate card number like\n        // this, hence probably you don't want to enable this option.\n        strictMode = !!strictMode;\n\n        for (var key in re) {\n            if (re[key].test(value)) {\n                var matchedBlocks = blocks[key];\n                return {\n                    type: key,\n                    blocks: strictMode ? this.getStrictBlocks(matchedBlocks) : matchedBlocks\n                };\n            }\n        }\n\n        return {\n            type: 'unknown',\n            blocks: strictMode ? this.getStrictBlocks(blocks.general) : blocks.general\n        };\n    }\n};\n\nvar CreditCardDetector_1 = CreditCardDetector;\n\nvar Util = {\n    noop: function () {\n    },\n\n    strip: function (value, re) {\n        return value.replace(re, '');\n    },\n\n    getPostDelimiter: function (value, delimiter, delimiters) {\n        // single delimiter\n        if (delimiters.length === 0) {\n            return value.slice(-delimiter.length) === delimiter ? delimiter : '';\n        }\n\n        // multiple delimiters\n        var matchedDelimiter = '';\n        delimiters.forEach(function (current) {\n            if (value.slice(-current.length) === current) {\n                matchedDelimiter = current;\n            }\n        });\n\n        return matchedDelimiter;\n    },\n\n    getDelimiterREByDelimiter: function (delimiter) {\n        return new RegExp(delimiter.replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1'), 'g');\n    },\n\n    getNextCursorPosition: function (prevPos, oldValue, newValue, delimiter, delimiters) {\n      // If cursor was at the end of value, just place it back.\n      // Because new value could contain additional chars.\n      if (oldValue.length === prevPos) {\n          return newValue.length;\n      }\n\n      return prevPos + this.getPositionOffset(prevPos, oldValue, newValue, delimiter ,delimiters);\n    },\n\n    getPositionOffset: function (prevPos, oldValue, newValue, delimiter, delimiters) {\n        var oldRawValue, newRawValue, lengthOffset;\n\n        oldRawValue = this.stripDelimiters(oldValue.slice(0, prevPos), delimiter, delimiters);\n        newRawValue = this.stripDelimiters(newValue.slice(0, prevPos), delimiter, delimiters);\n        lengthOffset = oldRawValue.length - newRawValue.length;\n\n        return (lengthOffset !== 0) ? (lengthOffset / Math.abs(lengthOffset)) : 0;\n    },\n\n    stripDelimiters: function (value, delimiter, delimiters) {\n        var owner = this;\n\n        // single delimiter\n        if (delimiters.length === 0) {\n            var delimiterRE = delimiter ? owner.getDelimiterREByDelimiter(delimiter) : '';\n\n            return value.replace(delimiterRE, '');\n        }\n\n        // multiple delimiters\n        delimiters.forEach(function (current) {\n            current.split('').forEach(function (letter) {\n                value = value.replace(owner.getDelimiterREByDelimiter(letter), '');\n            });\n        });\n\n        return value;\n    },\n\n    headStr: function (str, length) {\n        return str.slice(0, length);\n    },\n\n    getMaxLength: function (blocks) {\n        return blocks.reduce(function (previous, current) {\n            return previous + current;\n        }, 0);\n    },\n\n    // strip prefix\n    // Before type  |   After type    |     Return value\n    // PEFIX-...    |   PEFIX-...     |     ''\n    // PREFIX-123   |   PEFIX-123     |     123\n    // PREFIX-123   |   PREFIX-23     |     23\n    // PREFIX-123   |   PREFIX-1234   |     1234\n    getPrefixStrippedValue: function (value, prefix, prefixLength, prevResult, delimiter, delimiters, noImmediatePrefix, tailPrefix, signBeforePrefix) {\n        // No prefix\n        if (prefixLength === 0) {\n          return value;\n        }\n\n        // Value is prefix\n        if (value === prefix && value !== '') {\n          return '';\n        }\n\n        if (signBeforePrefix && (value.slice(0, 1) == '-')) {\n            var prev = (prevResult.slice(0, 1) == '-') ? prevResult.slice(1) : prevResult;\n            return '-' + this.getPrefixStrippedValue(value.slice(1), prefix, prefixLength, prev, delimiter, delimiters, noImmediatePrefix, tailPrefix, signBeforePrefix);\n        }\n\n        // Pre result prefix string does not match pre-defined prefix\n        if (prevResult.slice(0, prefixLength) !== prefix && !tailPrefix) {\n            // Check if the first time user entered something\n            if (noImmediatePrefix && !prevResult && value) return value;\n            return '';\n        } else if (prevResult.slice(-prefixLength) !== prefix && tailPrefix) {\n            // Check if the first time user entered something\n            if (noImmediatePrefix && !prevResult && value) return value;\n            return '';\n        }\n\n        var prevValue = this.stripDelimiters(prevResult, delimiter, delimiters);\n\n        // New value has issue, someone typed in between prefix letters\n        // Revert to pre value\n        if (value.slice(0, prefixLength) !== prefix && !tailPrefix) {\n            return prevValue.slice(prefixLength);\n        } else if (value.slice(-prefixLength) !== prefix && tailPrefix) {\n            return prevValue.slice(0, -prefixLength - 1);\n        }\n\n        // No issue, strip prefix for new value\n        return tailPrefix ? value.slice(0, -prefixLength) : value.slice(prefixLength);\n    },\n\n    getFirstDiffIndex: function (prev, current) {\n        var index = 0;\n\n        while (prev.charAt(index) === current.charAt(index)) {\n            if (prev.charAt(index++) === '') {\n                return -1;\n            }\n        }\n\n        return index;\n    },\n\n    getFormattedValue: function (value, blocks, blocksLength, delimiter, delimiters, delimiterLazyShow) {\n        var result = '',\n            multipleDelimiters = delimiters.length > 0,\n            currentDelimiter = '';\n\n        // no options, normal input\n        if (blocksLength === 0) {\n            return value;\n        }\n\n        blocks.forEach(function (length, index) {\n            if (value.length > 0) {\n                var sub = value.slice(0, length),\n                    rest = value.slice(length);\n\n                if (multipleDelimiters) {\n                    currentDelimiter = delimiters[delimiterLazyShow ? (index - 1) : index] || currentDelimiter;\n                } else {\n                    currentDelimiter = delimiter;\n                }\n\n                if (delimiterLazyShow) {\n                    if (index > 0) {\n                        result += currentDelimiter;\n                    }\n\n                    result += sub;\n                } else {\n                    result += sub;\n\n                    if (sub.length === length && index < blocksLength - 1) {\n                        result += currentDelimiter;\n                    }\n                }\n\n                // update remaining string\n                value = rest;\n            }\n        });\n\n        return result;\n    },\n\n    // move cursor to the end\n    // the first time user focuses on an input with prefix\n    fixPrefixCursor: function (el, prefix, delimiter, delimiters) {\n        if (!el) {\n            return;\n        }\n\n        var val = el.value,\n            appendix = delimiter || (delimiters[0] || ' ');\n\n        if (!el.setSelectionRange || !prefix || (prefix.length + appendix.length) <= val.length) {\n            return;\n        }\n\n        var len = val.length * 2;\n\n        // set timeout to avoid blink\n        setTimeout(function () {\n            el.setSelectionRange(len, len);\n        }, 1);\n    },\n\n    // Check if input field is fully selected\n    checkFullSelection: function(value) {\n      try {\n        var selection = window.getSelection() || document.getSelection() || {};\n        return selection.toString().length === value.length;\n      } catch (ex) {\n        // Ignore\n      }\n\n      return false;\n    },\n\n    setSelection: function (element, position, doc) {\n        if (element !== this.getActiveElement(doc)) {\n            return;\n        }\n\n        // cursor is already in the end\n        if (element && element.value.length <= position) {\n          return;\n        }\n\n        if (element.createTextRange) {\n            var range = element.createTextRange();\n\n            range.move('character', position);\n            range.select();\n        } else {\n            try {\n                element.setSelectionRange(position, position);\n            } catch (e) {\n                // eslint-disable-next-line\n                console.warn('The input element type does not support selection');\n            }\n        }\n    },\n\n    getActiveElement: function(parent) {\n        var activeElement = parent.activeElement;\n        if (activeElement && activeElement.shadowRoot) {\n            return this.getActiveElement(activeElement.shadowRoot);\n        }\n        return activeElement;\n    },\n\n    isAndroid: function () {\n        return navigator && /android/i.test(navigator.userAgent);\n    },\n\n    // On Android chrome, the keyup and keydown events\n    // always return key code 229 as a composition that\n    // buffers the user’s keystrokes\n    // see https://github.com/nosir/cleave.js/issues/147\n    isAndroidBackspaceKeydown: function (lastInputValue, currentInputValue) {\n        if (!this.isAndroid() || !lastInputValue || !currentInputValue) {\n            return false;\n        }\n\n        return currentInputValue === lastInputValue.slice(0, -1);\n    }\n};\n\nvar Util_1 = Util;\n\n/**\n * Props Assignment\n *\n * Separate this, so react module can share the usage\n */\nvar DefaultProperties = {\n    // Maybe change to object-assign\n    // for now just keep it as simple\n    assign: function (target, opts) {\n        target = target || {};\n        opts = opts || {};\n\n        // credit card\n        target.creditCard = !!opts.creditCard;\n        target.creditCardStrictMode = !!opts.creditCardStrictMode;\n        target.creditCardType = '';\n        target.onCreditCardTypeChanged = opts.onCreditCardTypeChanged || (function () {});\n\n        // phone\n        target.phone = !!opts.phone;\n        target.phoneRegionCode = opts.phoneRegionCode || 'AU';\n        target.phoneFormatter = {};\n\n        // time\n        target.time = !!opts.time;\n        target.timePattern = opts.timePattern || ['h', 'm', 's'];\n        target.timeFormat = opts.timeFormat || '24';\n        target.timeFormatter = {};\n\n        // date\n        target.date = !!opts.date;\n        target.datePattern = opts.datePattern || ['d', 'm', 'Y'];\n        target.dateMin = opts.dateMin || '';\n        target.dateMax = opts.dateMax || '';\n        target.dateFormatter = {};\n\n        // numeral\n        target.numeral = !!opts.numeral;\n        target.numeralIntegerScale = opts.numeralIntegerScale > 0 ? opts.numeralIntegerScale : 0;\n        target.numeralDecimalScale = opts.numeralDecimalScale >= 0 ? opts.numeralDecimalScale : 2;\n        target.numeralDecimalMark = opts.numeralDecimalMark || '.';\n        target.numeralThousandsGroupStyle = opts.numeralThousandsGroupStyle || 'thousand';\n        target.numeralPositiveOnly = !!opts.numeralPositiveOnly;\n        target.stripLeadingZeroes = opts.stripLeadingZeroes !== false;\n        target.signBeforePrefix = !!opts.signBeforePrefix;\n        target.tailPrefix = !!opts.tailPrefix;\n\n        // others\n        target.swapHiddenInput = !!opts.swapHiddenInput;\n        \n        target.numericOnly = target.creditCard || target.date || !!opts.numericOnly;\n\n        target.uppercase = !!opts.uppercase;\n        target.lowercase = !!opts.lowercase;\n\n        target.prefix = (target.creditCard || target.date) ? '' : (opts.prefix || '');\n        target.noImmediatePrefix = !!opts.noImmediatePrefix;\n        target.prefixLength = target.prefix.length;\n        target.rawValueTrimPrefix = !!opts.rawValueTrimPrefix;\n        target.copyDelimiter = !!opts.copyDelimiter;\n\n        target.initValue = (opts.initValue !== undefined && opts.initValue !== null) ? opts.initValue.toString() : '';\n\n        target.delimiter =\n            (opts.delimiter || opts.delimiter === '') ? opts.delimiter :\n                (opts.date ? '/' :\n                    (opts.time ? ':' :\n                        (opts.numeral ? ',' :\n                            (opts.phone ? ' ' :\n                                ' '))));\n        target.delimiterLength = target.delimiter.length;\n        target.delimiterLazyShow = !!opts.delimiterLazyShow;\n        target.delimiters = opts.delimiters || [];\n\n        target.blocks = opts.blocks || [];\n        target.blocksLength = target.blocks.length;\n\n        target.root = (typeof commonjsGlobal === 'object' && commonjsGlobal) ? commonjsGlobal : window;\n        target.document = opts.document || target.root.document;\n\n        target.maxLength = 0;\n\n        target.backspace = false;\n        target.result = '';\n\n        target.onValueChanged = opts.onValueChanged || (function () {});\n\n        return target;\n    }\n};\n\nvar DefaultProperties_1 = DefaultProperties;\n\n/**\n * Construct a new Cleave instance by passing the configuration object\n *\n * @param {String | HTMLElement} element\n * @param {Object} opts\n */\nvar Cleave = function (element, opts) {\n    var owner = this;\n    var hasMultipleElements = false;\n\n    if (typeof element === 'string') {\n        owner.element = document.querySelector(element);\n        hasMultipleElements = document.querySelectorAll(element).length > 1;\n    } else {\n      if (typeof element.length !== 'undefined' && element.length > 0) {\n        owner.element = element[0];\n        hasMultipleElements = element.length > 1;\n      } else {\n        owner.element = element;\n      }\n    }\n\n    if (!owner.element) {\n        throw new Error('[cleave.js] Please check the element');\n    }\n\n    if (hasMultipleElements) {\n      try {\n        // eslint-disable-next-line\n        console.warn('[cleave.js] Multiple input fields matched, cleave.js will only take the first one.');\n      } catch (e) {\n        // Old IE\n      }\n    }\n\n    opts.initValue = owner.element.value;\n\n    owner.properties = Cleave.DefaultProperties.assign({}, opts);\n\n    owner.init();\n};\n\nCleave.prototype = {\n    init: function () {\n        var owner = this, pps = owner.properties;\n\n        // no need to use this lib\n        if (!pps.numeral && !pps.phone && !pps.creditCard && !pps.time && !pps.date && (pps.blocksLength === 0 && !pps.prefix)) {\n            owner.onInput(pps.initValue);\n\n            return;\n        }\n\n        pps.maxLength = Cleave.Util.getMaxLength(pps.blocks);\n\n        owner.isAndroid = Cleave.Util.isAndroid();\n        owner.lastInputValue = '';\n        owner.isBackward = '';\n\n        owner.onChangeListener = owner.onChange.bind(owner);\n        owner.onKeyDownListener = owner.onKeyDown.bind(owner);\n        owner.onFocusListener = owner.onFocus.bind(owner);\n        owner.onCutListener = owner.onCut.bind(owner);\n        owner.onCopyListener = owner.onCopy.bind(owner);\n\n        owner.initSwapHiddenInput();\n\n        owner.element.addEventListener('input', owner.onChangeListener);\n        owner.element.addEventListener('keydown', owner.onKeyDownListener);\n        owner.element.addEventListener('focus', owner.onFocusListener);\n        owner.element.addEventListener('cut', owner.onCutListener);\n        owner.element.addEventListener('copy', owner.onCopyListener);\n\n\n        owner.initPhoneFormatter();\n        owner.initDateFormatter();\n        owner.initTimeFormatter();\n        owner.initNumeralFormatter();\n\n        // avoid touch input field if value is null\n        // otherwise Firefox will add red box-shadow for <input required />\n        if (pps.initValue || (pps.prefix && !pps.noImmediatePrefix)) {\n            owner.onInput(pps.initValue);\n        }\n    },\n\n    initSwapHiddenInput: function () {\n        var owner = this, pps = owner.properties;\n        if (!pps.swapHiddenInput) return;\n\n        var inputFormatter = owner.element.cloneNode(true);\n        owner.element.parentNode.insertBefore(inputFormatter, owner.element);\n\n        owner.elementSwapHidden = owner.element;\n        owner.elementSwapHidden.type = 'hidden';\n\n        owner.element = inputFormatter;\n        owner.element.id = '';\n    },\n\n    initNumeralFormatter: function () {\n        var owner = this, pps = owner.properties;\n\n        if (!pps.numeral) {\n            return;\n        }\n\n        pps.numeralFormatter = new Cleave.NumeralFormatter(\n            pps.numeralDecimalMark,\n            pps.numeralIntegerScale,\n            pps.numeralDecimalScale,\n            pps.numeralThousandsGroupStyle,\n            pps.numeralPositiveOnly,\n            pps.stripLeadingZeroes,\n            pps.prefix,\n            pps.signBeforePrefix,\n            pps.tailPrefix,\n            pps.delimiter\n        );\n    },\n\n    initTimeFormatter: function() {\n        var owner = this, pps = owner.properties;\n\n        if (!pps.time) {\n            return;\n        }\n\n        pps.timeFormatter = new Cleave.TimeFormatter(pps.timePattern, pps.timeFormat);\n        pps.blocks = pps.timeFormatter.getBlocks();\n        pps.blocksLength = pps.blocks.length;\n        pps.maxLength = Cleave.Util.getMaxLength(pps.blocks);\n    },\n\n    initDateFormatter: function () {\n        var owner = this, pps = owner.properties;\n\n        if (!pps.date) {\n            return;\n        }\n\n        pps.dateFormatter = new Cleave.DateFormatter(pps.datePattern, pps.dateMin, pps.dateMax);\n        pps.blocks = pps.dateFormatter.getBlocks();\n        pps.blocksLength = pps.blocks.length;\n        pps.maxLength = Cleave.Util.getMaxLength(pps.blocks);\n    },\n\n    initPhoneFormatter: function () {\n        var owner = this, pps = owner.properties;\n\n        if (!pps.phone) {\n            return;\n        }\n\n        // Cleave.AsYouTypeFormatter should be provided by\n        // external google closure lib\n        try {\n            pps.phoneFormatter = new Cleave.PhoneFormatter(\n                new pps.root.Cleave.AsYouTypeFormatter(pps.phoneRegionCode),\n                pps.delimiter\n            );\n        } catch (ex) {\n            throw new Error('[cleave.js] Please include phone-type-formatter.{country}.js lib');\n        }\n    },\n\n    onKeyDown: function (event) {\n        var owner = this,\n            charCode = event.which || event.keyCode;\n\n        owner.lastInputValue = owner.element.value;\n        owner.isBackward = charCode === 8;\n    },\n\n    onChange: function (event) {\n        var owner = this, pps = owner.properties,\n            Util = Cleave.Util;\n\n        owner.isBackward = owner.isBackward || event.inputType === 'deleteContentBackward';\n\n        var postDelimiter = Util.getPostDelimiter(owner.lastInputValue, pps.delimiter, pps.delimiters);\n\n        if (owner.isBackward && postDelimiter) {\n            pps.postDelimiterBackspace = postDelimiter;\n        } else {\n            pps.postDelimiterBackspace = false;\n        }\n\n        this.onInput(this.element.value);\n    },\n\n    onFocus: function () {\n        var owner = this,\n            pps = owner.properties;\n        owner.lastInputValue = owner.element.value;\n\n        if (pps.prefix && pps.noImmediatePrefix && !owner.element.value) {\n            this.onInput(pps.prefix);\n        }\n\n        Cleave.Util.fixPrefixCursor(owner.element, pps.prefix, pps.delimiter, pps.delimiters);\n    },\n\n    onCut: function (e) {\n        if (!Cleave.Util.checkFullSelection(this.element.value)) return;\n        this.copyClipboardData(e);\n        this.onInput('');\n    },\n\n    onCopy: function (e) {\n        if (!Cleave.Util.checkFullSelection(this.element.value)) return;\n        this.copyClipboardData(e);\n    },\n\n    copyClipboardData: function (e) {\n        var owner = this,\n            pps = owner.properties,\n            Util = Cleave.Util,\n            inputValue = owner.element.value,\n            textToCopy = '';\n\n        if (!pps.copyDelimiter) {\n            textToCopy = Util.stripDelimiters(inputValue, pps.delimiter, pps.delimiters);\n        } else {\n            textToCopy = inputValue;\n        }\n\n        try {\n            if (e.clipboardData) {\n                e.clipboardData.setData('Text', textToCopy);\n            } else {\n                window.clipboardData.setData('Text', textToCopy);\n            }\n\n            e.preventDefault();\n        } catch (ex) {\n            //  empty\n        }\n    },\n\n    onInput: function (value) {\n        var owner = this, pps = owner.properties,\n            Util = Cleave.Util;\n\n        // case 1: delete one more character \"4\"\n        // 1234*| -> hit backspace -> 123|\n        // case 2: last character is not delimiter which is:\n        // 12|34* -> hit backspace -> 1|34*\n        // note: no need to apply this for numeral mode\n        var postDelimiterAfter = Util.getPostDelimiter(value, pps.delimiter, pps.delimiters);\n        if (!pps.numeral && pps.postDelimiterBackspace && !postDelimiterAfter) {\n            value = Util.headStr(value, value.length - pps.postDelimiterBackspace.length);\n        }\n\n        // phone formatter\n        if (pps.phone) {\n            if (pps.prefix && (!pps.noImmediatePrefix || value.length)) {\n                pps.result = pps.prefix + pps.phoneFormatter.format(value).slice(pps.prefix.length);\n            } else {\n                pps.result = pps.phoneFormatter.format(value);\n            }\n            owner.updateValueState();\n\n            return;\n        }\n\n        // numeral formatter\n        if (pps.numeral) {\n            // Do not show prefix when noImmediatePrefix is specified\n            // This mostly because we need to show user the native input placeholder\n            if (pps.prefix && pps.noImmediatePrefix && value.length === 0) {\n                pps.result = '';\n            } else {\n                pps.result = pps.numeralFormatter.format(value);\n            }\n            owner.updateValueState();\n\n            return;\n        }\n\n        // date\n        if (pps.date) {\n            value = pps.dateFormatter.getValidatedDate(value);\n        }\n\n        // time\n        if (pps.time) {\n            value = pps.timeFormatter.getValidatedTime(value);\n        }\n\n        // strip delimiters\n        value = Util.stripDelimiters(value, pps.delimiter, pps.delimiters);\n\n        // strip prefix\n        value = Util.getPrefixStrippedValue(value, pps.prefix, pps.prefixLength, pps.result, pps.delimiter, pps.delimiters, pps.noImmediatePrefix, pps.tailPrefix, pps.signBeforePrefix);\n\n        // strip non-numeric characters\n        value = pps.numericOnly ? Util.strip(value, /[^\\d]/g) : value;\n\n        // convert case\n        value = pps.uppercase ? value.toUpperCase() : value;\n        value = pps.lowercase ? value.toLowerCase() : value;\n\n        // prevent from showing prefix when no immediate option enabled with empty input value\n        if (pps.prefix) {\n            if (pps.tailPrefix) {\n                value = value + pps.prefix;\n            } else {\n                value = pps.prefix + value;\n            }\n\n\n            // no blocks specified, no need to do formatting\n            if (pps.blocksLength === 0) {\n                pps.result = value;\n                owner.updateValueState();\n\n                return;\n            }\n        }\n\n        // update credit card props\n        if (pps.creditCard) {\n            owner.updateCreditCardPropsByValue(value);\n        }\n\n        // strip over length characters\n        value = Util.headStr(value, pps.maxLength);\n\n        // apply blocks\n        pps.result = Util.getFormattedValue(\n            value,\n            pps.blocks, pps.blocksLength,\n            pps.delimiter, pps.delimiters, pps.delimiterLazyShow\n        );\n\n        owner.updateValueState();\n    },\n\n    updateCreditCardPropsByValue: function (value) {\n        var owner = this, pps = owner.properties,\n            Util = Cleave.Util,\n            creditCardInfo;\n\n        // At least one of the first 4 characters has changed\n        if (Util.headStr(pps.result, 4) === Util.headStr(value, 4)) {\n            return;\n        }\n\n        creditCardInfo = Cleave.CreditCardDetector.getInfo(value, pps.creditCardStrictMode);\n\n        pps.blocks = creditCardInfo.blocks;\n        pps.blocksLength = pps.blocks.length;\n        pps.maxLength = Util.getMaxLength(pps.blocks);\n\n        // credit card type changed\n        if (pps.creditCardType !== creditCardInfo.type) {\n            pps.creditCardType = creditCardInfo.type;\n\n            pps.onCreditCardTypeChanged.call(owner, pps.creditCardType);\n        }\n    },\n\n    updateValueState: function () {\n        var owner = this,\n            Util = Cleave.Util,\n            pps = owner.properties;\n\n        if (!owner.element) {\n            return;\n        }\n\n        var endPos = owner.element.selectionEnd;\n        var oldValue = owner.element.value;\n        var newValue = pps.result;\n\n        endPos = Util.getNextCursorPosition(endPos, oldValue, newValue, pps.delimiter, pps.delimiters);\n\n        // fix Android browser type=\"text\" input field\n        // cursor not jumping issue\n        if (owner.isAndroid) {\n            window.setTimeout(function () {\n                owner.element.value = newValue;\n                Util.setSelection(owner.element, endPos, pps.document, false);\n                owner.callOnValueChanged();\n            }, 1);\n\n            return;\n        }\n\n        owner.element.value = newValue;\n        if (pps.swapHiddenInput) owner.elementSwapHidden.value = owner.getRawValue();\n\n        Util.setSelection(owner.element, endPos, pps.document, false);\n        owner.callOnValueChanged();\n    },\n\n    callOnValueChanged: function () {\n        var owner = this,\n            pps = owner.properties;\n\n        pps.onValueChanged.call(owner, {\n            target: {\n                name: owner.element.name,\n                value: pps.result,\n                rawValue: owner.getRawValue()\n            }\n        });\n    },\n\n    setPhoneRegionCode: function (phoneRegionCode) {\n        var owner = this, pps = owner.properties;\n\n        pps.phoneRegionCode = phoneRegionCode;\n        owner.initPhoneFormatter();\n        owner.onChange();\n    },\n\n    setRawValue: function (value) {\n        var owner = this, pps = owner.properties;\n\n        value = value !== undefined && value !== null ? value.toString() : '';\n\n        if (pps.numeral) {\n            value = value.replace('.', pps.numeralDecimalMark);\n        }\n\n        pps.postDelimiterBackspace = false;\n\n        owner.element.value = value;\n        owner.onInput(value);\n    },\n\n    getRawValue: function () {\n        var owner = this,\n            pps = owner.properties,\n            Util = Cleave.Util,\n            rawValue = owner.element.value;\n\n        if (pps.rawValueTrimPrefix) {\n            rawValue = Util.getPrefixStrippedValue(rawValue, pps.prefix, pps.prefixLength, pps.result, pps.delimiter, pps.delimiters, pps.noImmediatePrefix, pps.tailPrefix, pps.signBeforePrefix);\n        }\n\n        if (pps.numeral) {\n            rawValue = pps.numeralFormatter.getRawValue(rawValue);\n        } else {\n            rawValue = Util.stripDelimiters(rawValue, pps.delimiter, pps.delimiters);\n        }\n\n        return rawValue;\n    },\n\n    getISOFormatDate: function () {\n        var owner = this,\n            pps = owner.properties;\n\n        return pps.date ? pps.dateFormatter.getISOFormatDate() : '';\n    },\n\n    getISOFormatTime: function () {\n        var owner = this,\n            pps = owner.properties;\n\n        return pps.time ? pps.timeFormatter.getISOFormatTime() : '';\n    },\n\n    getFormattedValue: function () {\n        return this.element.value;\n    },\n\n    destroy: function () {\n        var owner = this;\n\n        owner.element.removeEventListener('input', owner.onChangeListener);\n        owner.element.removeEventListener('keydown', owner.onKeyDownListener);\n        owner.element.removeEventListener('focus', owner.onFocusListener);\n        owner.element.removeEventListener('cut', owner.onCutListener);\n        owner.element.removeEventListener('copy', owner.onCopyListener);\n    },\n\n    toString: function () {\n        return '[Cleave Object]';\n    }\n};\n\nCleave.NumeralFormatter = NumeralFormatter_1;\nCleave.DateFormatter = DateFormatter_1;\nCleave.TimeFormatter = TimeFormatter_1;\nCleave.PhoneFormatter = PhoneFormatter_1;\nCleave.CreditCardDetector = CreditCardDetector_1;\nCleave.Util = Util_1;\nCleave.DefaultProperties = DefaultProperties_1;\n\n// for angular directive\n((typeof commonjsGlobal === 'object' && commonjsGlobal) ? commonjsGlobal : window)['Cleave'] = Cleave;\n\n// CommonJS\nvar Cleave_1 = Cleave;\n\nexport default Cleave_1;\n"],"sourceRoot":""}