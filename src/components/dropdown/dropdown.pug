include ../dropdown-counter/dropdown-counter.pug

mixin dropdown(options)
  -
    let dropDownClassName = `dropdown dropdown_${options.typeDropdown} js-dropdown`
    let expandedCorners=''
    let isExpanded=options.isExpanded===true ? ' dropdown_active' : ''
    expandedCorners+=options.isExpanded ? ' dropdown_active' : ''
  div(class= dropDownClassName+expandedCorners)
    if options.typeDropdown==='guests'||options.typeDropdown==='room'
      .dropdown__input-wrapper
        input(class='dropdown__input' placeholder=options.placeholder type='text' id=options.id readonly)
        .dropdown__arrow='keyboard_arrow_down'
      div(class="dropdown__body"+isExpanded)
          each line in options.labels 
            +dropdown-counter({text:line.text,counterNumber:line.counterNumber})
          if options.withButtons 
            .dropdown__body-buttons.buttons-dropdown
              .buttons-dropdown__clear.buttons-dropdown_hidden Очистить
              .buttons-dropdown__apply Применить
    if options.typeDropdown==='date'||options.typeDropdown==='filter'
      .dropdown__input-wrapper
        input(class='dropdown__input' placeholder=options.placeholder type='text' id=options.id readonly)
        .dropdown__arrow='keyboard_arrow_down'
    if options.typeDropdown==='filter-date'
        .dropdown__input-wrapper
          input(class='dropdown__input' placeholder=options.placeholder type='text' readonly)
          .dropdown__arrow='keyboard_arrow_down'
        .dropdown__input-wrapper
          input(class='dropdown__input' placeholder=options.placeholder type='text' readonly)
          .dropdown__arrow='keyboard_arrow_down'