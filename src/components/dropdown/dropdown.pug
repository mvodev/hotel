include ../dropdown-counter/dropdown-counter.pug
include ../button/button.pug

mixin dropdown(options)
  -
    const dropDownClassName = `dropdown dropdown_${options.typeDropdown} js-dropdown`
    const expandedCornersClassName=`${options.isExpanded ? ' dropdown_is-opened' : ''}`
  div(class=`${dropDownClassName} ${expandedCornersClassName}`)
    if options.typeDropdown==='guests'||options.typeDropdown==='room'
      .dropdown__input-wrapper
        input(class='dropdown__input' placeholder=options.placeholder type='text' id=options.id readonly)
        .dropdown__arrow='keyboard_arrow_down'
      .dropdown__body(class=options.isExpanded && ' dropdown_is-opened')
          each line in options.labels 
            +dropdown-counter({text:line.text,counterNumber:line.counterNumber})
          if options.withButtons 
            .dropdown__body-buttons.js-dropdown__body-buttons
              +button({label:'Очистить',color:'transparent'})
              +button({label:'Применить',color:'transparent'})
    if options.typeDropdown==='date'||options.typeDropdown==='filter'
      .dropdown__input-wrapper
        input(class='dropdown__input' placeholder=options.placeholder type='text' id=options.id readonly)
        .dropdown__arrow='keyboard_arrow_down'
    if options.typeDropdown==='filter-date'
        .dropdown__input-wrapper
          input(class='dropdown__input' placeholder=options.placeholder type='text' readonly)
          .dropdown__arrow='keyboard_arrow_down'
        .dropdown__input-wrapper
          input(class='dropdown__input' placeholder=options.placeholder type='text' readonly)
          .dropdown__arrow='keyboard_arrow_down'